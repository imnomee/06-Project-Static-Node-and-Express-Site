{
    "projects": [
        {
            "id": "0",
            "project_name": "Random Quote Generator",
            "description": "In this random quote generator, we used HTML, CSS and Vanilla JS to display a Random Quote every 10 seconds and random colour with every new quote. This project holds dynamic values for timing and quotes. We can update the timing (in seconds) and add any number of quotes without changing the total number or any other quote to update the time.",
            "technologies": ["JavaScript", "CSS", "HTML"],
            "live_link": "https://imnomee.github.io/01-Random-Quote-Generator/",
            "github_link": "https://github.com/imnomee/01-Random-Quote-Generator",
            "image_urls": [
                "/static/images/00/1.png",
                "/static/images/00/2.png",
                "/static/images/00/3.png",
                "/static/images/00/4.png"
            ]
        },
        {
            "id": "1",
            "project_name": "List Pagination and Filtering",
            "description": "In this project, we have use pagination technique to enhance the usability of a web page. Started with a page that contains list of 54 student names and other sample of 64 student names created in HTML. Using Javascript we displayed 10 names or any number user wishes to view at a time and added a navigation system with series of links at the bottom of the page. When user will clicks the navigation links it will display next entries, 10 at a time. After completing the first task, we have added an optional task of adding working unobstrusive Javascript. You can search student names with Full or Partial name search. It will update the navigation links according to the results we receive from the search.",
            "technologies": ["JavaScript", "CSS", "HTML"],
            "live_link": "https://imnomee.github.io/02-List-Pagination-and-Filtering/",
            "github_link": "https://github.com/imnomee/02-List-Pagination-and-Filtering",
            "image_urls": [
                "/static/images/01/1.png",
                "/static/images/01/2.png",
                "/static/images/01/3.png"
            ]
        },
        {
            "id": "2",
            "project_name": "Interatice Form - Validations",
            "description": "In this project, we used Javascript to enhace an interactive registration form. Using supplied HTML and CSS files. We added our own Javascript to make the form more user-friendly. We added customized, conditional behaviours by validation user input and providing helpful error messages. So when the user enters the invalid information or leaves the field empty, the validtion will revoke the submission process. We used some of the regex (Regular Expressions) to test and match for validations.",
            "technologies": ["JavaScript", "CSS", "HTML", "NODE.js", "Express"],
            "live_link": "https://imnomee.github.io/03-Project-Interactive-form/",
            "github_link": "https://github.com/imnomee/03-Project-Interactive-form",
            "image_urls": [
                "https://placehold.it/1200x550/fff",
                "https://placehold.it/1200x550/eff",
                "https://placehold.it/1200x550/fef"
            ]
        },
        {
            "id": "3",
            "project_name": "OOP Javascript Game App",
            "description": "In this project we used Object Oriented Javascript to create a puzzle find the phrase game. We impleemented on screen keyboard listeners using 'click' events and then implemented real time physical keyboard listeners using 'keydown' events User is dispalyed a set of hidden letters, qwerty keyboard buttons and option to use physical keyboard in order to guess the hidden letters. If the correct guess is made, the hidden letter is shown. In case of incorrect guess, one life is lost. If the user loses 5 lives, the game is Over and user can play again with new phrase. If user has revealed all the letters, a page is displayed with User displayed with number of mistake they made. If user lost the game and lost 5 lives, the hidden phrase is shown with Game Over message.",
            "technologies": ["JavaScript", "CSS", "HTML", "NODE.js", "Express"],
            "live_link": "https://imnomee.github.io/04-OOP-Game-Show-App/",
            "github_link": "https://github.com/imnomee/04-OOP-Game-Show-App",
            "image_urls": [
                "/static/images/03/1.png",
                "/static/images/03/2.png",
                "/static/images/03/3.png",
                "/static/images/03/4.png"
            ]
        },
        {
            "id": "4",
            "project_name": "Public API Requests",
            "description": "In this project, we fetched Random User Data from an API (randomuser.me). We fetch 12 results and displayed their information on the page, including picture, name, email, city and state. When a user clicks on any of the generated card, A modal box is opend with some extra information about the profile, including Address, Date of Birth etc with Buttons to close, previous and next. - Close button will close the modal window - Next button will show the next profile - Prev button will show the previous profile It won't display any errors if the user is on the first or last record. We implemented a Search box for the fetch profiles. When a user enters a search string of more than 2 characters, it will display the result profiles and if there is not match a message is shown on the page. Sometimes the results will return multiple profiles, but user can still navigation through the buttons and get next or prev modal",
            "technologies": ["JavaScript", "CSS", "HTML", "API"],
            "live_link": "https://imnomee.github.io/05-Project-Public-API-Requests/",
            "github_link": "https://github.com/imnomee/05-Project-Public-API-Requests",
            "image_urls": [
                "/static/images/04/1.png",
                "/static/images/04/2.png",
                "/static/images/04/3.png"
            ]
        }
    ]
}
